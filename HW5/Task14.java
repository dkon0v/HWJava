import java.util.Stack;

class Solution {
    public boolean isValid(String s) {
		Stack<Character> stack = new Stack<Character>();
		for (char c : s.toCharArray()) {
			if (c == '(')
				stack.push(')');
			else if (c == '{')
				stack.push('}');
			else if (c == '[')
				stack.push(']');
			else if (stack.isEmpty() || stack.pop() != c)
				return false;
		}
		return stack.isEmpty();
	}
}

// Создается пустой стек stack.
// Для каждого символа c в строке s, начиная с первого символа и заканчивая последним:
// Если c равен открывающей скобке ((, {, [), то на стек stack кладется соответствующая закрывающая скобка (), }, ]).
// Если c равен закрывающей скобке (), }, ]), то из стека stack извлекается верхний элемент и проверяется, является ли он соответствующей открывающей скобкой для текущей закрывающей скобки c. Если не соответствует, то возвращается false (последовательность неправильная).
// После прохода всех символов, если стек stack остался пустым, значит все скобки в последовательности были правильно закрыты и функция возвращает true, иначе возвращается false.